image: docker:18.01.0-ce-git

variables:
  DOCKER_DRIVER: overlay
  INTERNAL_DOCKER_REGISTRY: "gitlab:5000"
  DOCKER_IMAGE: "gorest"
  CONTAINER_NAME: "gorest"
  REPO_NAME: tdlabs/gorest

services:
  - docker:dind

stages:
  - build
  - package
  - deploy

before_script:
  - 'echo -e "CI_BUILD_REF: $CI_BUILD_REF\nCI_PROJECT_DIR: $CI_PROJECT_DIR\nCI_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE\nCI_PROJECT_NAME: $CI_PROJECT_NAME\n"'

build:go:
  stage: build
  image: golang:1.9.3-stretch
  script:
    - echo "preparing go env"
    - mkdir -p $GOPATH/src/github.com/thomasdarimont/gotraining
    - ln -sf $CI_PROJECT_DIR $GOPATH/src/github.com/thomasdarimont/gotraining
    - cd $GOPATH/src/github.com/thomasdarimont/gotraining/$CI_PROJECT_NAME
    - echo "bulding $CI_PROJECT_NAME..."
    - ./build.sh
  artifacts:
    paths:
      - out/*
      - vendor

package:docker:
  stage: package
  script:
    - echo "docker build..."
    - docker build -t $INTERNAL_DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHA .
    - echo "docker build complete"
    - echo "docker push..."
    - docker push $INTERNAL_DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHA
    - echo "docker image push complete"
  dependencies:
    - build:go

deploy:test:
  stage: deploy
  image: ubuntu:17.10
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - 'mkdir -p ~/.ssh && chmod 700 ~/.ssh'
    - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'
  script:
    - echo "Deploy to TEST environment"
    - ssh vagrant@test "docker stop $CONTAINER_NAME || true"
    - ssh vagrant@test "docker rm $CONTAINER_NAME || true"
    - ssh vagrant@test docker run -d --rm --name $CONTAINER_NAME -p 8090:8080 $INTERNAL_DOCKER_REGISTRY/$CONTAINER_NAME:$CI_COMMIT_SHA
  environment:
    name: test
    url: http://test:8090/
  dependencies:
  - build:go
  only:
  - master
