image: docker:18.01.0-ce-git

variables:
  DOCKER_DRIVER: overlay
  INTERNAL_DOCKER_REGISTRY: "gitlab:5000"
  IMAGE_NAME: "gorest"
  CONTAINER_NAME: "gorest"
  REPO_NAME: tdlabs/gorest

services:
  - docker:dind

stages:
  - build
#  - test
  - package
  - deploy

before_script:
# see available variables: https://docs.gitlab.com/ce/ci/variables/README.html
  - 'echo -e "CI_BUILD_REF: $CI_BUILD_REF\nCI_PROJECT_DIR: $CI_PROJECT_DIR\nCI_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE\nCI_PROJECT_NAME: $CI_PROJECT_NAME\nCI_PIPELINE_ID: $CI_PIPELINE_ID\n"'

cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - $GOPATH

build:go:
  stage: build
  image: golang:1.9.4
  script:
    - echo "preparing go env"
    - mkdir -p $GOPATH/src/github.com/thomasdarimont/gotraining
    - ln -sf $CI_PROJECT_DIR $GOPATH/src/github.com/thomasdarimont/gotraining
    - cd $GOPATH/src/github.com/thomasdarimont/gotraining/$CI_PROJECT_NAME
    - echo "bulding $CI_PROJECT_NAME..."
    - echo $(cat VERSION).$CI_PIPELINE_ID > VERSION
    - ./build.sh test
  artifacts:
    paths:
      - out/*
      - vendor

#test:go:
#  stage: test
#  image: golang:1.9.4
#  script:
#    - echo "running tests..."
#    - ./build.sh
#    - go test ./...
#    - echo "tests completed."
#  dependencies:
#    - build:go

package:docker:
  stage: package
  script:
    - TAG=$CI_COMMIT_SHA ./build-docker.sh push
  dependencies:
    - build:go

deploy:test:
  stage: deploy
  image: phusion/baseimage:0.10.0
#  before_script:
#    - SSH_PRIVATE_KEY="$SSH_PRIVATE_KEY" SSH_SERVER_HOSTKEYS="$SSH_SERVER_HOSTKEYS" ./docker-init-ssh.sh
  script:
    - SSH_PRIVATE_KEY="$SSH_PRIVATE_KEY" SSH_SERVER_HOSTKEYS="$SSH_SERVER_HOSTKEYS" ./docker-init-ssh.sh
    - ENV=test DEPLOY_HOST=test TAG=$CI_COMMIT_SHA ./deploy.sh
  environment:
    name: test
    url: http://test:8090/
  dependencies:
  - package:docker
  only:
  - master

deploy:prod:
  stage: deploy
  image: phusion/baseimage:0.10.0
  before_script:
    - SSH_PRIVATE_KEY="$SSH_PRIVATE_KEY" SSH_SERVER_HOSTKEYS="$SSH_SERVER_HOSTKEYS" ./docker-init-ssh.sh
  script:
    - ENV=prod DEPLOY_HOST=prod TAG=$CI_COMMIT_SHA ./deploy.sh
  environment:
    name: prod
    url: http://prod:8090/
  dependencies:
  - package:docker
  when: manual
  only:
  - master